const CategoriesService = require(`../categories.service`);
const CategoriesRepository = require(`../categories.repository`);

jest.mock(`../categories.repository`);

describe(`CategoriesService`, () => {
  test(`–†–µ–∞–ª–∏–∑—É–µ—Ç —à–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è "–û–¥–∏–Ω–æ—á–∫–∞"`, () => {
    expect(new CategoriesService()).toBe(new CategoriesService());
  });

  describe(`readCategories`, () => {
    test(`–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π`, () => {
      const categoriesService = new CategoriesService();

      const EXPECTED_CATEGORIES = [];

      CategoriesRepository.prototype.readCategories.mockReturnValueOnce(EXPECTED_CATEGORIES);

      expect(categoriesService.readCategories()).toEqual(EXPECTED_CATEGORIES);
    });

    test(`–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏`, () => {
      const categoriesService = new CategoriesService();

      const EXPECTED_CATEGORIES = [
        {name: `üå≤ –î–µ—Ä–µ–≤—å—è`, id: `WCzHKQ`},
        {name: `üëÄ –ó–∞ –∂–∏–∑–Ω—å`, id: `sbA7_8`},
        {name: `üñº –ë–µ–∑ —Ä–∞–º–∫–∏`, id: `guQ4RE`},
      ];

      CategoriesRepository.prototype.readCategories.mockReturnValueOnce(EXPECTED_CATEGORIES);

      expect(categoriesService.readCategories()).toEqual(EXPECTED_CATEGORIES);
    });
  });
});
