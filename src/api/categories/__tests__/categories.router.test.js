const CategoriesRouter = require(`../categories.router`);
const CategoriesService = require(`../categories.service`);

jest.mock(`pino`);

jest.mock(`../categories.service`);

describe(`CategoriesRouter`, () => {
  test(`–†–µ–∞–ª–∏–∑—É–µ—Ç —à–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è "–û–¥–∏–Ω–æ—á–∫–∞"`, () => {
    expect(new CategoriesRouter()).toBe(new CategoriesRouter());
  });

  describe(`readCategories`, () => {
    test(`–ü–µ—Ä–µ–¥–∞—ë—Ç –ø—É—Å—Ç—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å`, () => {
      const categoriesRouter = new CategoriesRouter();

      const EXPECTED_CATEGORIES = [];

      const response = {status: jest.fn(), send: jest.fn()};

      CategoriesService.prototype.readCategories.mockReturnValueOnce(EXPECTED_CATEGORIES);

      categoriesRouter.readCategories(null, response);

      expect(response.status).not.toHaveBeenCalled();
      expect(response.send).toHaveBeenCalledWith(EXPECTED_CATEGORIES);
    });

    test(`–ü–µ—Ä–µ–¥–∞—ë—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å`, () => {
      const categoriesRouter = new CategoriesRouter();

      const EXPECTED_CATEGORIES = [
        {name: `üå≤ –î–µ—Ä–µ–≤—å—è`, id: `WCzHKQ`},
        {name: `üëÄ –ó–∞ –∂–∏–∑–Ω—å`, id: `sbA7_8`},
        {name: `üñº –ë–µ–∑ —Ä–∞–º–∫–∏`, id: `guQ4RE`},
      ];

      const response = {send: jest.fn()};

      CategoriesService.prototype.readCategories.mockReturnValueOnce(EXPECTED_CATEGORIES);

      categoriesRouter.readCategories(null, response);

      expect(response.send).toHaveBeenCalledWith(EXPECTED_CATEGORIES);
    });
  });
});
